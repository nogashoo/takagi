{
  "resolvedId": "/Users/nogamishota/takagi/src/composables/useContact.ts",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "export const useContact = () => {\n  const contactState = useState(\"contact\", () => {\n    return {\n      parentName: \"\",\n      parentNameKana: \"\",\n      childName: \"\",\n      childNameKana: \"\",\n      email: \"\",\n      phoneNumber: \"\",\n      schoolName: \"\",\n      grade: \"\",\n      messagAssignment: \"\",\n      messageDocument: \"\",\n    };\n  });\n\n  const setContact = (contact: any) => {\n    contactState.value = contact;\n  };\n\n  const send = async () => {\n    const formData = new FormData();\n    Object.entries(contactState.value).forEach(([key, value]) => {\n      formData.append(key, value);\n    });\n\n    await fetch(\"https://nogami-test.form.newt.so/v1/0teHx56Yc\", {\n      method: \"POST\",\n      body: formData,\n      headers: {\n        Accept: \"application/json\",\n      },\n    });\n  };\n\n  return {\n    contactState: readonly(contactState),\n    setContact,\n    send,\n  };\n};\n",
      "start": 1717937988051,
      "end": 1717937988057,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1717937988057,
      "end": 1717937988057,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1717937988057,
      "end": 1717937988057,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1717937988057,
      "end": 1717937988057,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1717937988057,
      "end": 1717937988057,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "result": "export const useContact = () => {\n  const contactState = useState(\"contact\", () => {\n    return {\n      parentName: \"\",\n      parentNameKana: \"\",\n      childName: \"\",\n      childNameKana: \"\",\n      email: \"\",\n      phoneNumber: \"\",\n      schoolName: \"\",\n      grade: \"\",\n      messagAssignment: \"\",\n      messageDocument: \"\"\n    };\n  });\n  const setContact = (contact) => {\n    contactState.value = contact;\n  };\n  const send = async () => {\n    const formData = new FormData();\n    Object.entries(contactState.value).forEach(([key, value]) => {\n      formData.append(key, value);\n    });\n    await fetch(\"https://nogami-test.form.newt.so/v1/0teHx56Yc\", {\n      method: \"POST\",\n      body: formData,\n      headers: {\n        Accept: \"application/json\"\n      }\n    });\n  };\n  return {\n    contactState: readonly(contactState),\n    setContact,\n    send\n  };\n};\n",
      "start": 1717937988057,
      "end": 1717937988071,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          "/Users/nogamishota/takagi/src/composables/useContact.ts"
        ],
        "sourcesContent": [
          "export const useContact = () => {\n  const contactState = useState(\"contact\", () => {\n    return {\n      parentName: \"\",\n      parentNameKana: \"\",\n      childName: \"\",\n      childNameKana: \"\",\n      email: \"\",\n      phoneNumber: \"\",\n      schoolName: \"\",\n      grade: \"\",\n      messagAssignment: \"\",\n      messageDocument: \"\",\n    };\n  });\n\n  const setContact = (contact: any) => {\n    contactState.value = contact;\n  };\n\n  const send = async () => {\n    const formData = new FormData();\n    Object.entries(contactState.value).forEach(([key, value]) => {\n      formData.append(key, value);\n    });\n\n    await fetch(\"https://nogami-test.form.newt.so/v1/0teHx56Yc\", {\n      method: \"POST\",\n      body: formData,\n      headers: {\n        Accept: \"application/json\",\n      },\n    });\n  };\n\n  return {\n    contactState: readonly(contactState),\n    setContact,\n    send,\n  };\n};\n"
        ],
        "mappings": "AAAO,aAAM,aAAa,MAAM;AAC9B,QAAM,eAAe,SAAS,WAAW,MAAM;AAC7C,WAAO;AAAA,MACL,YAAY;AAAA,MACZ,gBAAgB;AAAA,MAChB,WAAW;AAAA,MACX,eAAe;AAAA,MACf,OAAO;AAAA,MACP,aAAa;AAAA,MACb,YAAY;AAAA,MACZ,OAAO;AAAA,MACP,kBAAkB;AAAA,MAClB,iBAAiB;AAAA,IACnB;AAAA,EACF,CAAC;AAED,QAAM,aAAa,CAAC,YAAiB;AACnC,iBAAa,QAAQ;AAAA,EACvB;AAEA,QAAM,OAAO,YAAY;AACvB,UAAM,WAAW,IAAI,SAAS;AAC9B,WAAO,QAAQ,aAAa,KAAK,EAAE,QAAQ,CAAC,CAAC,KAAK,KAAK,MAAM;AAC3D,eAAS,OAAO,KAAK,KAAK;AAAA,IAC5B,CAAC;AAED,UAAM,MAAM,iDAAiD;AAAA,MAC3D,QAAQ;AAAA,MACR,MAAM;AAAA,MACN,SAAS;AAAA,QACP,QAAQ;AAAA,MACV;AAAA,IACF,CAAC;AAAA,EACH;AAEA,SAAO;AAAA,IACL,cAAc,SAAS,YAAY;AAAA,IACnC;AAAA,IACA;AAAA,EACF;AACF;",
        "names": []
      }
    },
    {
      "name": "vite:json",
      "start": 1717937988071,
      "end": 1717937988071,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1717937988071,
      "end": 1717937988071,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1717937988071,
      "end": 1717937988071,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1717937988071,
      "end": 1717937988071,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1717937988071,
      "end": 1717937988071,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1717937988071,
      "end": 1717937988071,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1717937988071,
      "end": 1717937988071,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1717937988071,
      "end": 1717937988071,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1717937988071,
      "end": 1717937988071,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1717937988071,
      "end": 1717937988071,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1717937988071,
      "end": 1717937988071,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1717937988071,
      "end": 1717937988071,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1717937988071,
      "end": 1717937988071,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1717937988071,
      "end": 1717937988071,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1717937988071,
      "end": 1717937988071,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1717937988071,
      "end": 1717937988071,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1717937988071,
      "end": 1717937988071,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1717937988071,
      "end": 1717937988071,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1717937988071,
      "end": 1717937988072,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "result": "import { useState } from '#app/composables/state';\nimport { readonly } from 'vue';\nexport const useContact = () => {\n  const contactState = useState(\"contact\", () => {\n    return {\n      parentName: \"\",\n      parentNameKana: \"\",\n      childName: \"\",\n      childNameKana: \"\",\n      email: \"\",\n      phoneNumber: \"\",\n      schoolName: \"\",\n      grade: \"\",\n      messagAssignment: \"\",\n      messageDocument: \"\"\n    };\n  });\n  const setContact = (contact) => {\n    contactState.value = contact;\n  };\n  const send = async () => {\n    const formData = new FormData();\n    Object.entries(contactState.value).forEach(([key, value]) => {\n      formData.append(key, value);\n    });\n    await fetch(\"https://nogami-test.form.newt.so/v1/0teHx56Yc\", {\n      method: \"POST\",\n      body: formData,\n      headers: {\n        Accept: \"application/json\"\n      }\n    });\n  };\n  return {\n    contactState: readonly(contactState),\n    setContact,\n    send\n  };\n};\n",
      "start": 1717937988072,
      "end": 1717937988072,
      "order": "post",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "mappings": "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C,CAAC,CAAC;AACpC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACV,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACf,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACR,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC;"
      }
    },
    {
      "name": "unctx:transform",
      "start": 1717937988072,
      "end": 1717937988072,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1717937988072,
      "end": 1717937988072,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1717937988072,
      "end": 1717937988072,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1717937988072,
      "end": 1717937988072,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1717937988072,
      "end": 1717937988072,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1717937988073,
      "end": 1717937988073,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1717937988073,
      "end": 1717937988073,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1717937988073,
      "end": 1717937988073,
      "order": "normal"
    }
  ]
}
