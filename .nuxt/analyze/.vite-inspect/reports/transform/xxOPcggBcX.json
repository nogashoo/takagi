{
  "resolvedId": "/Users/nogamishota/takagi/node_modules/toposort/index.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "\n/**\n * Topological sorting function\n *\n * @param {Array} edges\n * @returns {Array}\n */\n\nmodule.exports = function(edges) {\n  return toposort(uniqueNodes(edges), edges)\n}\n\nmodule.exports.array = toposort\n\nfunction toposort(nodes, edges) {\n  var cursor = nodes.length\n    , sorted = new Array(cursor)\n    , visited = {}\n    , i = cursor\n    // Better data structures make algorithm much faster.\n    , outgoingEdges = makeOutgoingEdges(edges)\n    , nodesHash = makeNodesHash(nodes)\n\n  // check for unknown nodes\n  edges.forEach(function(edge) {\n    if (!nodesHash.has(edge[0]) || !nodesHash.has(edge[1])) {\n      throw new Error('Unknown node. There is an unknown node in the supplied edges.')\n    }\n  })\n\n  while (i--) {\n    if (!visited[i]) visit(nodes[i], i, new Set())\n  }\n\n  return sorted\n\n  function visit(node, i, predecessors) {\n    if(predecessors.has(node)) {\n      var nodeRep\n      try {\n        nodeRep = \", node was:\" + JSON.stringify(node)\n      } catch(e) {\n        nodeRep = \"\"\n      }\n      throw new Error('Cyclic dependency' + nodeRep)\n    }\n\n    if (!nodesHash.has(node)) {\n      throw new Error('Found unknown node. Make sure to provided all involved nodes. Unknown node: '+JSON.stringify(node))\n    }\n\n    if (visited[i]) return;\n    visited[i] = true\n\n    var outgoing = outgoingEdges.get(node) || new Set()\n    outgoing = Array.from(outgoing)\n\n    if (i = outgoing.length) {\n      predecessors.add(node)\n      do {\n        var child = outgoing[--i]\n        visit(child, nodesHash.get(child), predecessors)\n      } while (i)\n      predecessors.delete(node)\n    }\n\n    sorted[--cursor] = node\n  }\n}\n\nfunction uniqueNodes(arr){\n  var res = new Set()\n  for (var i = 0, len = arr.length; i < len; i++) {\n    var edge = arr[i]\n    res.add(edge[0])\n    res.add(edge[1])\n  }\n  return Array.from(res)\n}\n\nfunction makeOutgoingEdges(arr){\n  var edges = new Map()\n  for (var i = 0, len = arr.length; i < len; i++) {\n    var edge = arr[i]\n    if (!edges.has(edge[0])) edges.set(edge[0], new Set())\n    if (!edges.has(edge[1])) edges.set(edge[1], new Set())\n    edges.get(edge[0]).add(edge[1])\n  }\n  return edges\n}\n\nfunction makeNodesHash(arr){\n  var res = new Map()\n  for (var i = 0, len = arr.length; i < len; i++) {\n    res.set(arr[i], i)\n  }\n  return res\n}\n",
      "start": 1717938219837,
      "end": 1717938219909,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1717938219909,
      "end": 1717938219909,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1717938219909,
      "end": 1717938219909,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1717938219909,
      "end": 1717938219909,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1717938219909,
      "end": 1717938219909,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1717938219909,
      "end": 1717938219909,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1717938219909,
      "end": 1717938219909,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1717938219909,
      "end": 1717938219909,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1717938219909,
      "end": 1717938219909,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1717938219909,
      "end": 1717938219909,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1717938219909,
      "end": 1717938219909,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1717938219909,
      "end": 1717938219909,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1717938219909,
      "end": 1717938219909,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1717938219909,
      "end": 1717938219909,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1717938219909,
      "end": 1717938219909,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1717938219909,
      "end": 1717938219909,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1717938219909,
      "end": 1717938219909,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1717938219909,
      "end": 1717938219909,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1717938219909,
      "end": 1717938219909,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1717938219909,
      "end": 1717938219909,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1717938219909,
      "end": 1717938219909,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "result": "import * as commonjsHelpers from \"\u0000commonjsHelpers.js\";\nimport { __module as toposortModule } from \"\\u0000/Users/nogamishota/takagi/node_modules/toposort/index.js?commonjs-module\";\nvar toposort_1 = toposortModule.exports;\n\n/**\n * Topological sorting function\n *\n * @param {Array} edges\n * @returns {Array}\n */\n\ntoposortModule.exports = function(edges) {\n  return toposort(uniqueNodes(edges), edges)\n}\n\nvar array = toposortModule.exports.array = toposort\n\nfunction toposort(nodes, edges) {\n  var cursor = nodes.length\n    , sorted = new Array(cursor)\n    , visited = {}\n    , i = cursor\n    // Better data structures make algorithm much faster.\n    , outgoingEdges = makeOutgoingEdges(edges)\n    , nodesHash = makeNodesHash(nodes)\n\n  // check for unknown nodes\n  edges.forEach(function(edge) {\n    if (!nodesHash.has(edge[0]) || !nodesHash.has(edge[1])) {\n      throw new Error('Unknown node. There is an unknown node in the supplied edges.')\n    }\n  })\n\n  while (i--) {\n    if (!visited[i]) visit(nodes[i], i, new Set())\n  }\n\n  return sorted\n\n  function visit(node, i, predecessors) {\n    if(predecessors.has(node)) {\n      var nodeRep\n      try {\n        nodeRep = \", node was:\" + JSON.stringify(node)\n      } catch(e) {\n        nodeRep = \"\"\n      }\n      throw new Error('Cyclic dependency' + nodeRep)\n    }\n\n    if (!nodesHash.has(node)) {\n      throw new Error('Found unknown node. Make sure to provided all involved nodes. Unknown node: '+JSON.stringify(node))\n    }\n\n    if (visited[i]) return;\n    visited[i] = true\n\n    var outgoing = outgoingEdges.get(node) || new Set()\n    outgoing = Array.from(outgoing)\n\n    if (i = outgoing.length) {\n      predecessors.add(node)\n      do {\n        var child = outgoing[--i]\n        visit(child, nodesHash.get(child), predecessors)\n      } while (i)\n      predecessors.delete(node)\n    }\n\n    sorted[--cursor] = node\n  }\n}\n\nfunction uniqueNodes(arr){\n  var res = new Set()\n  for (var i = 0, len = arr.length; i < len; i++) {\n    var edge = arr[i]\n    res.add(edge[0])\n    res.add(edge[1])\n  }\n  return Array.from(res)\n}\n\nfunction makeOutgoingEdges(arr){\n  var edges = new Map()\n  for (var i = 0, len = arr.length; i < len; i++) {\n    var edge = arr[i]\n    if (!edges.has(edge[0])) edges.set(edge[0], new Set())\n    if (!edges.has(edge[1])) edges.set(edge[1], new Set())\n    edges.get(edge[0]).add(edge[1])\n  }\n  return edges\n}\n\nfunction makeNodesHash(arr){\n  var res = new Map()\n  for (var i = 0, len = arr.length; i < len; i++) {\n    res.set(arr[i], i)\n  }\n  return res\n}\n\nvar toposortExports = toposortModule.exports;\nexport default /*@__PURE__*/commonjsHelpers.getDefaultExportFromCjs(toposortExports);\nexport { toposortExports as __moduleExports, array };",
      "start": 1717938219909,
      "end": 1717938219910,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "file": null,
        "sources": [
          null
        ],
        "sourcesContent": [
          null
        ],
        "names": [],
        "mappings": "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"
      }
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1717938219910,
      "end": 1717938219910,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1717938219910,
      "end": 1717938219910,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1717938219910,
      "end": 1717938219910,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1717938219910,
      "end": 1717938219910,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1717938219910,
      "end": 1717938219910,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1717938219910,
      "end": 1717938219910,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1717938219910,
      "end": 1717938219910,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1717938219910,
      "end": 1717938219910,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1717938219910,
      "end": 1717938219910,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1717938219910,
      "end": 1717938219910,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1717938219910,
      "end": 1717938219910,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1717938219910,
      "end": 1717938219910,
      "order": "normal"
    }
  ]
}
